{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducer from './reducers';\nconst logMiddleware = _ref => {\n  let {\n    getState\n  } = _ref;\n  return next => action => {\n    console.log(action.type, getState());\n    return next(action);\n  };\n};\nconst stringMiddleware = () => next => action => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    });\n  }\n  return next(action);\n};\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware));\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","thunkMiddleware","reducer","logMiddleware","getState","next","action","console","log","type","stringMiddleware","store"],"sources":["/Users/macbookpro/Documents/GitHub/todo-list/src/store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport reducer from './reducers'\n\nconst logMiddleware = ({ getState }) => (next) => (action) => {\n  console.log(action.type, getState())\n  return next(action)\n}\n\nconst stringMiddleware = () => (next) => (action) => {\n  if (typeof action === 'string') {\n    return next({\n      type: action\n    })\n  }\n\n  return next(action)\n}\n\nconst store = createStore(reducer, applyMiddleware(thunkMiddleware, stringMiddleware, logMiddleware))\n\nexport default store"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,QAAQ,OAAO;AACpD,OAAOC,eAAe,MAAM,aAAa;AACzC,OAAOC,OAAO,MAAM,YAAY;AAEhC,MAAMC,aAAa,GAAG;EAAA,IAAC;IAAEC;EAAS,CAAC;EAAA,OAAMC,IAAI,IAAMC,MAAM,IAAK;IAC5DC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,IAAI,EAAEL,QAAQ,EAAE,CAAC;IACpC,OAAOC,IAAI,CAACC,MAAM,CAAC;EACrB,CAAC;AAAA;AAED,MAAMI,gBAAgB,GAAG,MAAOL,IAAI,IAAMC,MAAM,IAAK;EACnD,IAAI,OAAOA,MAAM,KAAK,QAAQ,EAAE;IAC9B,OAAOD,IAAI,CAAC;MACVI,IAAI,EAAEH;IACR,CAAC,CAAC;EACJ;EAEA,OAAOD,IAAI,CAACC,MAAM,CAAC;AACrB,CAAC;AAED,MAAMK,KAAK,GAAGZ,WAAW,CAACG,OAAO,EAAEF,eAAe,CAACC,eAAe,EAAES,gBAAgB,EAAEP,aAAa,CAAC,CAAC;AAErG,eAAeQ,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}